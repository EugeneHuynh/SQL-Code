
IF OBJECT_ID('dbo.DimEthnos') IS NOT NULL
BEGIN
     DROP TABLE dbo.DimEthnos
END
--Drops table if a table called "DimEthnos" already exists
update RawNHSData
set ethnos = '99'
where ethnos ='' 
--If there is a blank entry in ethnos replace it with 99 instead for "Not known".
SELECT distinct
     ETHNOS as ID
     ,CASE	  
                  WHEN ETHNOS = 'A' THEN 'British (White)'
				  when ETHNOS = 'B' then 'Irish (White)'
				  when ETHNOS = 'C' then 'Any other White Background'
				  when ETHNOS = 'D' then 'White and Black Caribbean'
				  when ETHNOS = 'E' then 'White and Black African (Mixed)'
				  when ETHNOS = 'F' then 'White and Asian (Mixed)'
				  when ETHNOS = 'G' then 'Any other mixed background'
				  WHEN ETHNOS = 'H' THEN 'Indian (Asian or Asian British)'
				  when ETHNOS = 'J' then 'Pakistanit (Asian or Asian British)'
				  when ETHNOS = 'K' then 'Bangladeshi (Asian or Asian British)'
				  when ETHNOS = 'L' then 'Any other Asian background'
				  when ETHNOS = 'M' then 'Caribbean (Black or Black British)'
				  when ETHNOS = 'N' then 'African  (Black or Black British)'
				  when ETHNOS = 'P' then 'Any other Black background'
				  when ETHNOS = 'R' then 'Chinese (other ethnic group)'
				  when ETHNOS = 'S' then 'Any other ethnic group'
				  when ETHNOS = 'Z' then 'Not stated'
				  when ETHNOS = 'X' then 'Not known (prior to 2013)'
				  when ETHNOS = '99' then 'Not known'        
     END AS Description --creates a column for the description of the ethnicity for each ethnos code
	  into DimEthnos --creates table and populates it
FROM RawNHSData

IF OBJECT_ID('dbo.DimEpitype') IS NOT NULL
BEGIN
     DROP TABLE dbo.DimEpitype
END
--Drops table if a table called "DimEpitype" already exists.

update RawNHSData
set epitype = 0
where epitype = ''
--If there is a blank entry in ethnos replace it with 99 instead for "Not known".
select distinct
epitype as ID
,case when epitype = 0 then 'Not known'
	when epitype = 1 then 'General episode'
	when epitype = 2 then 'Delivery episode'
	when epitype = 3 then 'Birth episode'
	when epitype = 4 then 'Formally detained'
	when epitype = 5 then 'Other delivery event'
	when epitype = 6 then 'Other birth event'
	end Description
	into DimEpiType --creates and populates the table with the description of each code.
from RawNHSData 
order by  epitype asc
 
 IF OBJECT_ID('dbo.DimSex') IS NOT NULL
BEGIN
     DROP TABLE dbo.DimSex
END
--Drops table if a table called "DimSex" already exists.
select distinct
sex as id
,case 
	when sex = 1 then 'Male'
	when sex = 2 then 'Female'
	when sex = 9 then 'Not specified'
	when sex = 0 then 'Not known'
	end Description
	 into DimSex
from RawNHSData
--Creates table and populates it with the description for each code
IF OBJECT_ID('dbo.DimEpiStat') IS NOT NULL
BEGIN
     DROP TABLE dbo.DimEpiStat
END
--Drops table if a table called "DimEpiStat" already exists.
select distinct
epistat as id
,case when epistat = 1 then 'Unfinished'
	when epistat = 3 then 'Finished'
	when epistat = 9 then 'Derived Unfinished'
	end description
	into DimEpistat
from RawNHSData
--Creates table and populates it with the description for each code.
IF OBJECT_ID('dbo.DimAdminCat') IS NOT NULL
BEGIN
     DROP TABLE dbo.DimAdmincat
END
--Drops table if a table called "DimAdminCat" already exists.
select distinct
admincat as ID
, case
	when admincat = 1 then 'NHS patient'
	when admincat = 2 then 'Private patient'
	when admincat = 3 then 'Amenity patient'
	when admincat = 4 then 'Category 2 patient'
	when admincat = 98 then 'Not Applicable'
	when admincat = 99 then 'Not known'
	end description
into DimAdminCat
--Creates table and populates it with the description for each code.
from RawNHSData
order by admincat asc

IF OBJECT_ID('dbo.DimAdminCatST') IS NOT NULL
BEGIN
     DROP TABLE dbo.DimAdmincatST
END
--Drops table if a table called "DimAdminCatST" already exists.
select distinct
admincat as ID
, case
	when admincat = 1 then 'NHS patient'
	when admincat = 2 then 'Private patient'
	when admincat = 3 then 'Amenity patient'
	when admincat = 4 then 'Category 2 patient'
	when admincat = 98 then 'Not Applicable'
	when admincat = 99 then 'Not known'
	end description
into DimAdminCatST
--Creates table and populates it with the description for each code.
from RawNHSData
order by admincat asc

IF OBJECT_ID('dbo.DimCategory') IS NOT NULL
BEGIN
     DROP TABLE dbo.DimCategory
END
--Drops table if a table called "DimCategory" already exists.
select distinct
category as ID
, case 
	when category = 10 then 'NHS patient: not formally detained'
	when category = 11 then 'NHS patient: formally detained under Part II of the Mental Health Act 1983'
	when category = 12 then 'NHS patient: formally detained under Part III of the Mental Health Act 1983 or under other Acts'
	when category = 13 then 'NHS patient: formally detained under part X, Mental Health Act 1983'
	when category = 20 then 'Private patient: not formally detained'
	when category = 21 then 'Private patient: formally detained under Part II of the Mental Health Act 1983'
	when category = 22 then 'Private patient: formally detained under Part III of the Mental Health Act 1983 or under other Acts'
	when category = 23 then 'Private patient: formally detained under part X, Mental health Act 1983'
	when category = 30 then 'Amenity patient: not formally detained'
	when category = 31 then 'Amenity patient: formally detained under Part II of the Mental Health Act 1983'
	when category = 32 then 'Amenity patient: formally detained under Part III of the Mental Health Act 1983 or under other Acts'
	when category = 33 then 'Amenity patient: formally detained under part X, Mental health Act 1983'

	end description
	into dimCategory
from RawNHSData
order by category asc
--Creates table and populates it with the description for each code.
IF OBJECT_ID('dbo.Dimleglcat') IS NOT NULL
BEGIN
     DROP TABLE dbo.Dimleglcat
END
update RawNHSData
set leglcat = 27
where leglcat =''
--Any blanks in leglcat are replaced with 27 for 'Not known'
select distinct
leglcat as id
,case 
	when leglcat = 1 then 'Informal'
	when leglcat = 2 then 'Formally detained under the Mental Health Act, Section 2'
	when leglcat = 3 then 'Formally detained under the Mental Health Act, Section 3'
	when leglcat = 4 then 'Formally detained under the Mental Health Act, Section 4'
	when leglcat = 5 then 'Formally detained under the Mental Health Act, Section 5(2)'
	when leglcat = 6 then 'Formally detained under the Mental Health Act, Section 5(4)'
	when leglcat = 7 then 'Formally detained under the Mental Health Act, Section 35 '
	when leglcat = 8 then 'Formally detained under the Mental Health Act, Section 36 '
	when leglcat = 9 then 'Formally detained under the Mental Health Act, Section 37 with Section 41 restrictions'
	when leglcat = 10 then 'Formally detained under the Mental Health Act, Section 37 excluding Section 37(4)'
	when leglcat = 11 then 'Formally detained under the Mental Health Act, Section 37(4)'
	when leglcat = 12 then 'Formally detained under the Mental Health Act, Section 38'
	when leglcat = 13 then 'Formally detained under the Mental Health Act, Section 44'
	when leglcat = 14 then 'Formally detained under the Mental Health Act, Section 46'
	when leglcat = 15 then 'Formally detained under the Mental Health Act, Section 47 with Section 49 restrictions'
	when leglcat = 16 then 'Formally detained under the Mental Health Act, Section 47'
	when leglcat = 17 then 'Formally detained under the Mental Health Act, Section 48 with Section 49 restrictions'
	when leglcat = 18 then 'Formally detained under the Mental Health Act, Section 48'
	when leglcat = 19 then 'Formally detained under the Mental Health Act, Section 135'
	when leglcat = 20 then 'Formally detained under the Mental Health Act, Section 136'
	when leglcat = 21 then 'Formally detained under the previous legislation (fifth schedule)'
	when leglcat = 22 then 'Formally detained under Criminal Procedure (Insanity) Act 1964 as amended by the Criminal Procedures (Insanity and Unfitness to Plead) Act 1991'
	when leglcat = 23 then 'Formally detained under other Acts'
	when leglcat = 24 then 'Supervised discharge under the Mental Health (Patients in the Community) Act 1995'
	when leglcat = 25 then 'Formally detained under the Mental Health Act, Section 45A'
	when leglcat = 26 then 'Not applicable'
	when leglcat = 27 then 'Not known'
	end description
 into Dimleglcat
from RawNHSData			
--Creates table and populates it with the description for each code.
IF OBJECT_ID('dbo.dimclasspat') IS NOT NULL
BEGIN
     DROP TABLE dbo.dimclasspat
end
--Drops table if a table called "Dimclasspat" already exists.
select distinct
classpat as id
,case 
	when classpat = 1 then 'Ordinary admission'
	when classpat = 2 then 'Day case admission'
	when classpat = 3 then 'Regular day attender'
	when classpat = 4 then 'Regular night attender'
	when classpat = 5 then 'Mothers and babies using only delivery facilities'
	when classpat = 8 then 'Not applicable (other maternity event)'
	when classpat = 9 then 'Not known'
end description
into dimclasspat
from RawNHSData
--Creates table and populates it with the description for each code.
IF OBJECT_ID('dbo.dimAdmimeth') IS NOT NULL
BEGIN
     DROP TABLE dbo.dimAdmiMeth
end
--Drops table if a table called "DimAdmiMeth" already exists.
select distinct
admimeth as ID
,case
	when admimeth = '11' then 'Waiting List'
	when admimeth = '28' then 'Other means'
	when admimeth = '99' then 'Not known: a validation error'
	when admimeth = '2A' then 'Accident and Emergency Department of another provider where the patient had not been admitted'
	when admimeth = '12' then 'Booked'
	when admimeth = '2B' then 'Transfer of an admitted patient from another Hospital Provider in an emergency'
	when admimeth = '21' then 'Accident and emergency or dental casualty department of the Health Care Provider'
	when admimeth = '13' then 'Planned'
	when admimeth = '25' then 'Admission via Mental Health Crisis Resolution Team'
	
	end as [Description]

	into Dimadmimeth
from RawnhsData
--Creates table and populates it with the description for each code.
IF OBJECT_ID('dbo.dimadmisorc') IS NOT NULL
BEGIN
     DROP TABLE dbo.Dimadmisorc
END
--Drops table if a table called "DimAdminCat" already exists.

select distinct
admisorc as id
, case 
	when admisorc = 19 then 'The usual place of residence' 
	when admisorc = 29 then 'Temporary place of residence' 
	when admisorc = 30 then 'Repatriation from high security psychiatric hospital (1999-00 to 2006-07)' 
	when admisorc = 37 then 'Penal establishment: court (1999-00 to 2006-07)' 
	when admisorc = 38 then 'Penal establishment: police station (1999-00 to 2006-07)' 
	when admisorc = 39 then 'Penal establishment, Court or Police Station / Police Custody Suite' 
	when admisorc = 48 then 'High security psychiatric hospital, Scotland (1999-00 to 2006-07)' 
	when admisorc = 49 then 'NHS other hospital provider: high security psychiatric accommodation in an NHS hospital provider (NHS trust or NHS Foundation Trust)' 
	when admisorc = 50 then 'NHS other hospital provider: medium secure unit (1999-00 to 2006-07)' 
	when admisorc = 51 then 'NHS other hospital provider: ward for general patients or the younger physically disabled or A&E department' 
	when admisorc = 52 then 'NHS other hospital provider: ward for maternity patients or neonates' 
	when admisorc = 53 then 'NHS other hospital provider: ward for patients who are mentally ill or have learning disabilities' 
	when admisorc = 54 then 'NHS run Care Home' 
	when admisorc = 65 then 'Local authority residential accommodation i.e. where care is provided' 
	when admisorc = 66 then 'Local authority foster care, but not in residential accommodation i.e. where care is provided' 
	when admisorc = 69 then 'Local authority home or care (1989-90 to 1995-96)' 
	when admisorc = 79 then 'Babies born in or on the way to hospital' 
	when admisorc = 85 then 'Non-NHS (other than Local Authority) run care home' 
	when admisorc = 86 then 'Non-NHS (other than Local Authority) run nursing home' 
	when admisorc = 87 then 'Non-NHS run hospital' 
	when admisorc = 88 then 'non-NHS (other than Local Authority) run hospice' 
	when admisorc = 89 then 'Non-NHS institution (1989-90 to 1995-96)' 
	when admisorc = 98 then 'Not applicable' 
	when admisorc = 99 then 'Not known' 
	end description
	into dimadmisorc
from RawNHSData
--Creates table and populates it with the description for each code.

update RawNHSData
set endage = 'N/A' 
where endage = ''
update RawNHSData
set elecdate = '01/01/1900'
where elecdate = ''
--Replaces the blanks for endage and elecdate to N/A and 01/01/1900 respectively.
update RawNHSData
set newnhsno = NULL
where newnhsno = ''
--Replaces blank NHS numbers with NULL
select
	--Spell
	Episode 
	,epistart [Episode Start]
	,epiend [Episode End]
	,DimEpitype.Description as [Episode Type]
	,DimSex.Description as Sex
	--,bedyear 
	,epidur [Episode Duration]
	--,DimEpistat.Description as [Episode Status]
	--,spellbgin
	--,activage
	--admiage
	,DimAdmincat.Description as [Admission Category]
	,DimAdmincatst.Description as admincatst
	,substring(DimCategory.Description, charindex(':', dimCategory.description) +2, len(dimCategory.description)) as Category
	,dob [Date of Birth]
	--,endage
	,DimEthnos.Description as [Ethnicity]
	,hesid
	,DimLeglcat.Description as [Legal Category]
	,lopatid
	--,mydob
	,newnhsno [NHS Number]
	--,newnhsno_check
	--,startage
	,admistart
	,Dimadmimeth.Description as [Admission Method]
	,DimAdmisorc.Description as [Source of Admission]
	,elecdate
	--,elecdur
	--,elecdur_calc
	,DimClasspat.Description as [Patient Classification]
	--,diag_01
	--Some of the clumns have been  ommittes fro the query since they are not meaningful, are duplicates or can have their values derived from another column. 
	--For example spell does not add value since all of the records are 1. Any of the age columns can be derivd from other columns such as dob.
from RawNHSData r
left join Dimadmimeth on r.admimeth = Dimadmimeth.ID
left join DimAdmincat on r.admincat = DimAdmincat.ID
left join DimAdmincatst on r.admincatst = DimAdmincatst.ID
left join DimAdmisorc on r.admisorc = DimAdmisorc.ID
left join DimCategory on r.category = DimCategory.ID
left join DimClasspat on r.classpat = DimClasspat.ID
left join DimEpistat on r.epistat = DimEpistat.ID
left join DimEpitype on r.epitype = DimEpitype.ID
left join DimEthnos on r.ethnos = DimEthnos.ID
left join DimLeglcat on r.leglcat = DimLeglcat.ID
left join DimSex on r.sex = DimSex.ID

order by cast(r.[ID no ] as int) asc --orders by ID number

--queries data with the meaningul descriptions instead of the codes by joining the IDs to the relevant table
